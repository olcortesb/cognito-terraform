Name: onPushToMainDeploymentWorkflow
SchemaVersion: "1.0"

# ---------------------------------------------------------------------------------
# Trigger: Se activa con cada push a la rama 'main'
# ---------------------------------------------------------------------------------
Triggers:
  - Type: PUSH
    Branches:
      - main

# ---------------------------------------------------------------------------------
# Actions: Define los pasos del flujo de trabajo
# ---------------------------------------------------------------------------------
Actions:
  # -------------------------------------------------------------------------------
  # PASO 1: Inicializa Terraform y crea un plan de ejecución.
  # El plan se guarda como un artefacto para usarlo en el siguiente paso.
  # -------------------------------------------------------------------------------
  TerraformInitAndPlan:
    Identifier: aws/build@v1
    Compute:
      Type: EC2
      Fleet: Linux.x86-64.Large
    # Inputs:
    #   Sources:
    #     - WorkflowSource
    Outputs:
      Artifacts:
        - Name: TerraformPlanArtifact
          Files:
            - build-output/tfplan
            - build-output/.terraform.lock.hcl
            - build-output/.terraform
    Configuration:
      Steps:
        - Run: |
            wget https://releases.hashicorp.com/terraform/1.9.8/terraform_1.9.8_linux_amd64.zip
            unzip terraform_1.9.8_linux_amd64.zip
            chmod +x terraform
        - Run: ./terraform init
        - Run: ./terraform plan -var="environment=dev" -var="region=eu-central-1" -out=tfplan
    Environment:
      Name: dev
      Connections:
        - Name: olcortesb-account
          Role: CodeCatalystWorkflowDevelopmentRole-olcortesb

  # -------------------------------------------------------------------------------
  # PASO 2: Aplica el plan de Terraform creado en el paso anterior.
  # Depende de que 'TerraformInitAndPlan' haya finalizado con éxito.
  # -------------------------------------------------------------------------------
  TerraformApply:
    Identifier: aws/build@v1
    DependsOn:
      - TerraformInitAndPlan
    Compute:
      Type: EC2
      Fleet: Linux.x86-64.Large
    Inputs:
      Sources:
        - WorkflowSource
      Artifacts:
        - TerraformPlanArtifact
    Configuration:
      Steps:
        - Run: |
            wget https://releases.hashicorp.com/terraform/1.9.8/terraform_1.9.8_linux_amd64.zip
            unzip terraform_1.9.8_linux_amd64.zip
            chmod +x terraform
        - Run: |
            echo "Checking all directories recursively:"
            find / -name "*tfplan*" 2>/dev/null || true
            echo "Checking CODEBUILD environment variables:"
            env | grep -i artifact || true
            echo "Checking for any terraform files:"
            find . -name "*.tf*" -type f
        # - Run: ./terraform init
        # - Run: |
        #     echo "Re-creating plan in apply step as workaround:"
        #     ./terraform plan -var="environment=dev" -var="region=eu-central-1" -out=tfplan
        - Run: cd build-output
        - Run: ./terraform apply -auto-approve tfplan
    Environment:
      Name: dev
      Connections:
        - Name: olcortesb-account
          Role: CodeCatalystWorkflowDevelopmentRole-olcortesb